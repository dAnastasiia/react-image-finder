{"version":3,"sources":["components/Section/Section.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/images-api.js","components/App/App.js","index.js"],"names":["Section","children","this","props","className","Component","Searchbar","state","query","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","onSubmit","reset","type","onChange","autoComplete","autoFocus","placeholder","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","tags","largeImageURL","createPortal","onClick","src","alt","ImageGalleryItem","handleImage","dataset","source","name","images","map","id","webformatURL","data-source","ImageGallery","showModal","toggleModal","Button","fetchImages","searchQuery","currentPage","pageSize","axios","get","then","res","data","hits","App","isLoading","error","onChangeQuery","imagesApi","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevProps","hasError","shouldRenderLoadMoreBtn","length","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b18bb081.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Section extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return <div className=\"Section\">{children}</div>;\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const value = e.currentTarget.value;\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            onChange={this.handleChange}\r\n            value={query}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { tags, largeImageURL } = this.props;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={largeImageURL} alt={tags} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n  };\r\n\r\n  handleImage = e => {\r\n    e.preventDefault();\r\n\r\n    const src = e.target.dataset.source;\r\n    const name = e.target.alt;\r\n\r\n    this.props.onClick(src, name);\r\n    // console.dir(e.target);\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.props;\r\n\r\n    return images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n      <li className=\"ImageGalleryItem\" key={id}>\r\n        <img\r\n          onClick={this.handleImage}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          className=\"ImageGalleryItem-image\"\r\n          data-source={largeImageURL}\r\n        />\r\n      </li>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../Modal';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    showModal: false,\r\n    largeImageURL: '',\r\n    tags: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  onClick = (src, name) => {\r\n    this.setState({ largeImageURL: src, tags: name });\r\n    this.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { showModal, largeImageURL, tags } = this.state;\r\n    const { images } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <ul className=\"ImageGallery\">\r\n          <ImageGalleryItem images={images} onClick={this.onClick} />\r\n        </ul>\r\n\r\n        {showModal && (\r\n          <Modal\r\n            onClose={this.toggleModal}\r\n            largeImageURL={largeImageURL}\r\n            tags={tags}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { onClick } = this.props;\r\n\r\n    return (\r\n      <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import axios from 'axios';\r\n\r\nconst fetchImages = (searchQuery, currentPage, pageSize = 12) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=20570263-88be5cc00acf6d7ebc52c1208&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(res => res.data.hits);\r\n};\r\n\r\nexport default fetchImages;\r\n","import React, { Component } from 'react';\r\n\r\nimport Section from '../Section';\r\nimport Searchbar from '../Searchbar';\r\nimport ImageGallery from '../ImageGallery';\r\nimport Button from '../Button';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport imagesApi from '../../services/images-api';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    currentPage: 1,\r\n    searchQuery: '',\r\n    isLoading: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      images: [],\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, currentPage } = this.state;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    imagesApi(searchQuery, currentPage)\r\n      .then(data => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...data],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, hasError } = this.state;\r\n    const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\r\n\r\n    return (\r\n      <Section>\r\n        {hasError && <h1>Something went wrong...</h1>}\r\n\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n        <ImageGallery images={images} />\r\n\r\n        {shouldRenderLoadMoreBtn && <Button onClick={this.fetchImages} />}\r\n\r\n        {isLoading && (\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#3f51b5\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n          />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}